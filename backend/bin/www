var app = require('../app');
var db = require('../db/db');
var debug = require('debug')('backend:server');
var http = require('http').Server(app);
var io = require('socket.io')(http);
var passport = require('../routes/passport');
var jwt = require('jsonwebtoken');
var express = require('express');

io.on('connection', (socket) => {
  console.log('New user connected');

  socket.on('user_token', data => {
    console.log(data);
  })

  socket.on('register', data => {
    try {
      passport.checkBody(data);
      passport.signUp(data.username, data.password);
    } catch (err) {
      console.error(err);
    }
  })
  socket.on('login', async data => {
    try {
      passport.checkBody(data);
      let user = await passport.logIn(data.username, data.password);
      user = JSON.stringify(user);
      let userToken = Buffer.from(user).toString('base64');
      io.emit('login', userToken);
    } catch (err) {
      console.error(err);
    }
  })
  socket.on('room', async data => {
    try {
      passport.checkBody(data);
      let room = new db.Room();
      room.name = data;
      room.validate();
      await room.save();
      io.emit('room', room);
    } catch (err) {
      console.error(err);
    }
  })
  socket.on('rooms', async data => {
    try {
      let rooms = await db.Room.find({});
      io.emit('rooms', rooms);
    } catch (err) {
      console.error(err);
    }
  })
  socket.on('roomDelete', async data => {
    try {
      passport.checkBody(data);
      let roomDeleted = await db.Room.findOneAndRemove({ name: data });
      io.emit('roomDelete', roomDeleted);
    } catch (err) {
      console.error(err);
    }
  })
  socket.on('message', data => {
    passport.checkBody(data);
    io.emit('message', data);
  })

  socket.on('disconnect', () => {
    console.log('user disconnected');
  });

})

http.listen(3000, function () {
  console.log('listening on :3000');
});
